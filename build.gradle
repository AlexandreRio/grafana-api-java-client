plugins {
    id 'java'
    id 'maven'
    id 'org.unbroken-dome.test-sets' version '1.3.2'
    id 'com.diffplug.gradle.spotless' version '3.3.0'
    id 'signing'
    id 'io.codearte.nexus-staging'
}

group = 'com.appnexus.grafana-client'
description = """A simple java client for interacting with Grafana using a fluent interface"""
version = '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
}

ext {
    junitVersion = '4.12'
    jacksonVersion = '2.8.8'
    lombokVersion = '1.16.14'
    retrofitVersion = '2.2.0'
}

testSets {
    integrationTest { dirName = 'integration-test' }
}

dependencies {
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jacksonVersion
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    compile group: 'com.squareup.retrofit2', name: 'retrofit', version: retrofitVersion
    compile group: 'com.squareup.retrofit2', name: 'converter-jackson', version: retrofitVersion

    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion

    testCompile group: 'junit', name: 'junit', version: junitVersion
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// Signature of artifacts
signing {
    sign configurations.archives
}

//ToDo: remove old way of publishing
//publishing {
//    repositories {
//        mavenLocal()
//    }
//
//    publications {
//        mavenJava(MavenPublication) {
//            from components.java
//
//            artifacts {
//                archives javadocJar, sourceJar
//            }
//        }
//    }
//}

artifacts {
    archives javadocJar, sourceJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name project.name
                packaging 'jar'
                description project.description
                url 'https://github.com/appnexus/grafana-api-java-client'

                scm {
                    connection 'scm:git:https://github.com/appnexus/grafana-api-java-client.git'
                    developerConnection 'scm:git:git@github.com:appnexus/grafana-api-java-client.git'
                    url 'https://github.com/appnexus/grafana-api-java-client.git'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'stevesample'
                        name 'Steve Sample'
                        email 'steve.sample22@gmail.com'
                    }
                }
            }
        }
    }
}

nexusStaging {
    username = ossrhUser
    password = ossrhPassword
}

spotless {
    java {
        googleJavaFormat()
        licenseHeader '/* Licensed under Apache-2.0 */'
    }
}
